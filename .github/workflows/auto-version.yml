name: Auto Version on Merge

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    runs-on: windows-latest
    name: Auto-bump using Commitizen

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üõ†Ô∏è Install Poetry
        run: pip install poetry

      - name: üîç Extract Python version from pyproject.toml
        id: python_version
        shell: pwsh
        run: |
          $pyVersion = poetry run python -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')"
          echo "PYTHON_VERSION=$pyVersion" >> $env:GITHUB_ENV

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: üì¶ Install Commitizen
        run: pip install commitizen

      - name: üõ†Ô∏è Configure Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: üîñ Bump version and changelog
        id: cz
        run: |
          cz bump --yes --changelog
          echo "VERSION=$(cz version)" >> $env:GITHUB_ENV

      - name: üìù Update installer version
        shell: pwsh
        run: |
          (Get-Content build/installer_script.iss) -replace '^#define AppVersion .*', "#define AppVersion `"${{ env.VERSION }}`"" | Set-Content build/installer_script.iss

      - name: üèóÔ∏è Download Inno Setup CLI
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile "is.exe"
          mkdir issetup
          & "C:\Program Files\7-Zip\7z.exe" x is.exe -oissetup

      - name: üõ†Ô∏è Build installer
        shell: pwsh
        run: .\issetup\ISCC.exe build\installer_script.iss

      - name: üöÄ Push version and tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin HEAD:main --follow-tags

      - name: üì¢ Create GitHub Release and Upload Installer
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body_path: CHANGELOG.md
          files: ./Output/FinanceAppInstaller.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
