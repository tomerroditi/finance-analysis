name: Auto Bump Version and Create Release

on:
  push:
    branches:
      - main

jobs:
  get-version:
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, 'bump:')"  # Skips all jobs if the commit message starts with 'bump:'
    name: Get version from pyproject.toml
    outputs:
      version: ${{ steps.get-version.outputs.version }}

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          fetch-depth: 0

      - name: Get version from pyproject.toml
        id: get-version
        run: |
          pip install toml
          version=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
          echo "Version is $version"
          echo "version=$version" >> $GITHUB_OUTPUT

  bump-version:
    runs-on: ubuntu-latest
    needs: get-version
    name: Bump version and create changelog
    outputs:
      version: ${{ steps.bump.outputs.version }}

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          fetch-depth: 0

      - id: bump
        name: üßô Run Commitizen bump
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  create-release:
    needs: [get-version, bump-version]
    if: needs.bump-version.outputs.version != needs.get-version.outputs.version
    runs-on: ubuntu-latest
    name: Create Release and Build Installer

    steps:
      - name: print version
        run: echo ${{ needs.bump-version.outputs.version }}

      - name: üì• Checkout latest code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          ref: main

      - name: üß∞ Install NSIS
        run: sudo apt-get update && sudo apt-get install -y nsis

      - name: üõ†Ô∏è Build installer
        run: |
          python build/build_installer.py
          makensis build/installer_script.nsi

      - name: ‚ö†Ô∏è Check installer exists
        run: |
          if [ ! -f build/FinanceAppInstaller.exe ]; then
            echo "Installer not found!"
            exit 1
          fi

      - name: üì¢ Create GitHub Release and Upload Installer
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.bump-version.outputs.version }}
          name: Release v${{ needs.bump-version.outputs.version }}
          body_path: CHANGELOG.md
          files: build/FinanceAppInstaller.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
